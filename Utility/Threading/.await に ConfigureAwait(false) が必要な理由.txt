from https://qwerty2501.hatenablog.com/entry/2014/04/24/235849

【結論】
呼び出し元アプリケーションの種類が不特定なコードの場合は、await の際に .ConfigureAwait(false) を追加すべきである。



例えば以下のようなコードがある場合。

await somethingAsyncFunction();

このコードを実行した後、最終的に .Wait() なり .Result なりで待機する際に、
同期コンテキストに基づいて待機が行われる。

同期コンテキストはGUIアプリやASP.NETなどで様々な実装がある。

await を行うと、await が記述されているコードを実行した時点での同期コンテキストが適用されるが、
通常、この適用される同期コンテキストはそのスレッドの既定のものになる。
複数の同期コンテキストを混在させて待ち合わせを行うとデッドロックが起こりやすい。
なので、

1) そのコードがライブラリの一部であり、かつ
2) そのライブラリを使用するのがGUIかASP.NETかその他か不明である

場合には、以下のような回避策をとる。

await somethingAsyncFunction().ConfigureAwait(false);

.ConfigureAwait(false)を追加することにより、呼び出し元アプリケーションの同期コンテキストが適用されるため、
同期コンテキストが統一されて、デッドロックの危機は回避できる。


